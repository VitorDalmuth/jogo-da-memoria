üßæ Documenta√ß√£o T√©cnica ‚Äî Jogo da Mem√≥ria com Tkinter

üéì Projeto de Faculdade ‚Äî Estruturas de Dados com Interface Gr√°fica

‚∏ª

üìå Objetivo do Projeto

Desenvolver um jogo da mem√≥ria com interface gr√°fica, utilizando a linguagem Python e o m√≥dulo Tkinter. O jogo tem como foco refor√ßar o aprendizado de estruturas de dados fundamentais como pilha, fila e lista, associando cada conceito a uma dupla (pergunta e resposta).

‚∏ª

üìÅ Estrutura do Arquivo
	‚Ä¢	Jogo da Memoria.py: Arquivo principal com todo o c√≥digo-fonte.
	‚Ä¢	(Opcional) README.md e requirements.txt para ambiente de desenvolvimento.

‚∏ª

üß† Descri√ß√£o Geral

O jogo consiste em um tabuleiro 3x4 (3 linhas por 4 colunas) onde o jogador deve encontrar pares corretos (pergunta + resposta). Cada carta revela um texto relacionado √† estrutura de dados. O jogo √© para dois jogadores, com altern√¢ncia autom√°tica de turnos.

‚∏ª

üß© Funcionalidades

Funcionalidade	Descri√ß√£o
Interface gr√°fica	Feita com Tkinter, ajust√°vel √† janela
Embaralhamento de cartas	As 12 cartas (6 pares) s√£o embaralhadas aleatoriamente
Cores por tipo de par	Cada par tem uma cor de fundo distinta para facilitar a memoriza√ß√£o
Detec√ß√£o de pares corretos	Verifica se a pergunta e resposta combinam
Controle de turnos	Alterna entre Jogador1 e Jogador2 se o par n√£o for correto
Pontua√ß√£o	Cada acerto soma 1 ponto ao jogador ativo
Fim de jogo autom√°tico	Mostra mensagem com o vencedor quando todas as cartas forem reveladas



‚∏ª

üì¶ Bibliotecas Utilizadas
	‚Ä¢	tkinter: cria√ß√£o da interface gr√°fica (GUI)
	‚Ä¢	random: para embaralhamento das cartas
	‚Ä¢	collections.deque: para controlar a rota√ß√£o dos turnos de forma eficiente

‚∏ª

üßÆ Estruturas de Dados Envolvidas

Estrutura	Local no c√≥digo	Finalidade
Lista 2D	tabuleiro, estado_tabuleiro, widgets	Representa o tabuleiro do jogo, o estado de cada carta, e os bot√µes
Fila (deque)	turnos = deque([...])	Controla de quem √© o turno atual
Pilha (lista)	pilha = []	Armazena as cartas viradas temporariamente (m√°ximo 2 por vez)



‚∏ª

üß± Explica√ß√£o do C√≥digo

1. Inicializa√ß√£o de pares com cor

pares_com_cores = [
    (("Qual estrutura adiciona no final e remove do in√≠cio?", "Fila"), "#add8e6"),
    ...
]

Cada par √© uma tupla com pergunta e resposta, e uma cor associada para visual.

‚∏ª

2. Constru√ß√£o do tabuleiro

cartas = [item for par in pares for item in par]
random.shuffle(cartas)
tabuleiro = [cartas[i:i+4] for i in range(0, 12, 4)]

	‚Ä¢	Cria uma lista com 12 textos (6 pares duplicados).
	‚Ä¢	Embaralha os textos.
	‚Ä¢	Monta um grid 3x4.

‚∏ª

3. Interface Gr√°fica com Tkinter
	‚Ä¢	tk.Tk(): cria a janela principal.
	‚Ä¢	frame_superior: mostra o turno e placar.
	‚Ä¢	frame_tabuleiro: onde as cartas (bot√µes) s√£o posicionadas.

‚∏ª

4. Fun√ß√£o virar_carta

def virar_carta(linha, coluna):
    ...

	‚Ä¢	Evita virar cartas j√° reveladas.
	‚Ä¢	Substitui o bot√£o por um Label com texto e cor.
	‚Ä¢	Se duas cartas forem viradas, aciona verificar_par.

‚∏ª

5. Verifica√ß√£o de Par

def verificar_par():
    ...

	‚Ä¢	Verifica se a carta 1 + carta 2 formam um dos pares definidos.
	‚Ä¢	Se sim: pontua e mant√©m abertas.
	‚Ä¢	Se n√£o: oculta novamente ap√≥s 800ms e passa o turno.

‚∏ª

6. Fim de jogo

def fim_de_jogo():
    ...

	‚Ä¢	Verifica se todas as posi√ß√µes est√£o reveladas.
	‚Ä¢	Mostra mensagem final com placar e vencedor.

‚∏ª

üñ•Ô∏è Execu√ß√£o

Requisitos:
	‚Ä¢	Python 3 instalado
	‚Ä¢	Tkinter dispon√≠vel (j√° vem no macOS e Windows)

Comando para rodar:

python3 "Jogo da Memoria.py"



‚∏ª

üìö Conclus√£o

Este projeto √© uma aplica√ß√£o pr√°tica de conceitos te√≥ricos vistos na disciplina de Estrutura de Dados. Ele refor√ßa o entendimento dos comportamentos de estruturas como pilha (LIFO), fila (FIFO) e listas, integrando essas ideias em um ambiente interativo e l√∫dico. Al√©m disso, exercita a l√≥gica de programa√ß√£o e o uso de GUIs em Python.

‚∏ª

üìå Sugest√µes de Extens√£o
	‚Ä¢	Adicionar cron√¥metro e ranking de tempo
	‚Ä¢	Modo de jogo individual
	‚Ä¢	N√≠veis de dificuldade com mais pares
	‚Ä¢	Anima√ß√µes e efeitos sonoros

‚∏ª